@model Fitness_Applicatie.Models.TrainingViewModel

@{
    ViewData["Title"] = "Add Training";
}

<script src="~/js/addTraining.js"></script>

<div class="row" id="training">
    <div class="col-3">
        <button onclick="addExerciseField()" id="addFieldButton">Add Exercise</button>
    </div>

    <div class="col-6">
        @using (Html.BeginForm("AddStrengthTraining", "Training", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "setContent()", id = "trainingForm" }))
        {
            <div id="exerciseGroup" style="text-align:right">
                <div class="form-group row" id="setGroup" style="display:inline">
                    <label asp-for="Rounds[0].Exercise.Name" id="nameLbl"></label>
                    <input asp-for="Rounds[0].Exercise.Name" />
                    <label asp-for="Rounds[0].Sets[0].Weight" id="setsLbl">Weights</label>
                    <input asp-for="Rounds[0].Sets[0].Weight" style="width: 10%; margin-bottom:16px" />
                    <button id="addSetButton@0_0" onclick="addSetField(this.id);return false" type="button">Add set</button>
                    <br />
                </div>
            </div>
            <br />
            <br />
            <input type="submit" value="Add Training" id="addTrainingSubmit" />
        }
    </div>

    <div class="col-3">

    </div>
</div>

<button hidden id="addSetButtonFormat" onclick="addSetField(this.id);return false" type="button">Add set</button>
@Html.ValidationMessageFor(m => m.Rounds)
@if (Convert.ToBoolean(TempData["Error"]))
{
    <script>
        alert("Something went wrong");
    </script>
}

@model TrainingViewModel

@{
    if (Model.TrainingType == TrainingType.Strength)
    {
        foreach (var round in Model.Rounds)
        {
            <b>@round.Exercise.Name</b>
            for (int i = 1; i <= round.Sets.Count; i++)
            {
                <p>Set @i : @round.Sets[i - 1].Weight</p>
            }
        }

        @using (Html.BeginForm("DeleteTraining", "Training", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(m => m.TrainingID)
            @Html.HiddenFor(m => m.TrainingType)
            <input type="submit" value="Delete Training" class="btn-danger" />
        }
    }

    else if (Model.TrainingType == TrainingType.Cardio)
    {
        <b>@Model.Date.ToLongDateString()</b>
        <br />
        <br />
        <b>Exercise</b>
        <p>@Model.Exercise.Name</p>
        <b>Distance</b>
        <p>@Model.Distance km</p>
        <b>Time</b>
        <p>@Model.Minutes:@Model.Seconds</p>

        @using (Html.BeginForm("DeleteTraining", "Training", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(m => m.TrainingID)
            @Html.HiddenFor(m => m.TrainingType)
            <input type="submit" value="Delete Training" class="btn-danger" />
        }
    }

    else
    {
        <p>Something went wrong</p>
    }
}